.data
input_prompt: .asciiz "Enter the first integer: "
input_prompt2: .asciiz "Enter the second integer: "
output_quotient: .asciiz "Quotient: "
output_remainder: .asciiz "Remainder: "

.text
.globl main

main:
    # Prompt for the first integer
    li $v0, 4
    la $a0, input_prompt
    syscall

    # Read the first integer
    li $v0, 5
    syscall
    move $t0, $v0

    # Prompt for the second integer
    li $v0, 4
    la $a0, input_prompt2
    syscall

    # Read the second integer
    li $v0, 5
    syscall
    move $t1, $v0

    # Check if the second integer is 0 (division by zero)
    beqz $t1, division_by_zero

    # Perform division and store quotient and remainder
    div $t0, $t1
    mfhi $t2 # Remainder is in $t2
    mflo $t3 # Quotient is in $t3

    # Output quotient
    li $v0, 4
    la $a0, output_quotient
    syscall

    li $v0, 1
    move $a0, $t3
    syscall

    # Output remainder
    li $v0, 4
    la $a0, output_remainder
    syscall

    li $v0, 1
    move $a0, $t2
    syscall

    # Exit the program
    li $v0, 10
    syscall

division_by_zero:
    # Handle division by zero
    li $v0, 4
    la $a0, division_by_zero_msg
    syscall

    # Exit the program
    li $v0, 10
    syscall

.data
division_by_zero_msg: .asciiz "Division by zero is not allowed!\n"
